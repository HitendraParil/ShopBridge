{"version":3,"sources":["components/common/Header.js","utils/validation.js","components/admin/Product/ActionTypes.js","components/admin/Product/Action.js","components/common/Modal.js","utils/constants.js","components/admin/Product/AddProduct.js","components/admin/Product/index.js","App.js","reportWebVitals.js","components/admin/Product/Reducer.js","index.js"],"names":["Header","Navbar","bg","variant","Brand","href","isEmptyOrNull","state","error","propName","errorMessage","undefined","GET_ALL_PRODUCT","ADD_PRODUCT","GET_PRODUCT_BY_ID","UPDATE_PRODUCT","DELETE_PRODUCT","getAllProducts","type","ActionType","AddProduct","product","payload","getProductById","productId","updateProduct","deleteProduct","Modal","props","aria-labelledby","closeButton","Title","id","title","Body","className","Container","children","Footer","Button","onClick","onHide","submitText","onSubmit","CATEGORY","categoryId","categoryName","errors","productName","description","price","show","Form","Group","controlId","Label","Control","name","value","onChange","handleInputChange","placeholder","htmlFor","Array","isArray","map","category","as","InventoryList","e","target","setState","getCategoryName","filter","length","openModal","isShow","onConfirm","handlesubmit","validateInput","closeModal","Object","keys","isModalShow","nextProps","this","productsData","singleProduct","products","Row","Col","sm","Table","striped","bordered","hover","responsive","index","width","style","marginRight","icon","faPenAlt","faTrashAlt","warning","showCancel","confirmBtnText","confirmBtnBsStyle","onCancel","focusCancelBtn","Component","connect","ProductReducer","dispatch","ownProps","bindActionCreators","App","Product","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","inventoryReducer","action","addProduct","updatedProduct","rootReducer","combineReducers","assign","allReducers","enhancer","compose","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b22dc949.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport default function Header() {\n  return (\n    <div>\n      <Navbar bg=\"danger\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">\n          <strong>ShopBridge</strong>\n        </Navbar.Brand>\n      </Navbar>\n    </div>\n  );\n}\n","export function isEmptyOrNull(state, error, propName, errorMessage) {\n        if ( state === undefined || state === '' || state == null) {\n            //Set Error Object from localized resource file\n            error[propName] = errorMessage;\n            return true;\n        }\n        return false;\n    }","\r\n//GET ALL USERS\r\n\r\nexport const GET_ALL_PRODUCT = \"GET_ALL_PRODUCT\";\r\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const GET_PRODUCT_BY_ID = \"GET_PRODUCT_BY_ID\";\r\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\n","import * as ActionType from './ActionTypes';\r\n\r\n//Get all products\r\nexport const getAllProducts = () => {\r\n    return {\r\n        type: ActionType.GET_ALL_PRODUCT,\r\n    };\r\n};\r\n\r\nexport const AddProduct = (product) => {\r\n    return {\r\n        type: ActionType.ADD_PRODUCT,\r\n        payload : product,\r\n    };\r\n};\r\n\r\n\r\nexport const getProductById = (productId) => {\r\n    return {\r\n        type: ActionType.GET_PRODUCT_BY_ID,\r\n        payload : productId,\r\n    };\r\n};\r\n\r\nexport const updateProduct = (product) => {\r\n    return {\r\n        type: ActionType.UPDATE_PRODUCT,\r\n        payload : product\r\n    };\r\n};\r\n\r\nexport const deleteProduct = (productId) => {\r\n    return {\r\n        type: ActionType.DELETE_PRODUCT,\r\n        payload : productId,\r\n    };\r\n};\r\n\r\n\r\n","import React from 'react'\nimport { Container, Row, Col, Modal as MainModal, Button} from 'react-bootstrap';\nexport default function Modal(props) {\n    return (\n        <div>\n            <MainModal {...props} aria-labelledby=\"contained-modal-title-vcenter\">\n                <MainModal.Header closeButton>\n                    <MainModal.Title id=\"contained-modal-title-vcenter\">\n                        {props.title}\n                    </MainModal.Title>\n                </MainModal.Header>\n                <MainModal.Body className=\"show-grid\">\n                    <Container>\n                        {props.children}\n                    </Container>\n                </MainModal.Body>\n                <MainModal.Footer>\n                    <Button onClick={props.onHide}>Close</Button>\n                    { props.submitText ? <Button variant=\"danger\" onClick={props.onSubmit}>{props.submitText}</Button> : \"\"}\n                </MainModal.Footer>\n                </MainModal>\n        </div>\n    )\n}\n","export const CATEGORY = [\n  {\n    categoryId: 1,\n    categoryName: \"Vegetables\"\n  },\n  {\n    categoryId: 2,\n    categoryName: \"Fruits\"\n  },\n  {\n    categoryId: 3,\n    categoryName: \"Glossary\"\n  }\n]","import React from 'react'\nimport { Form, Button } from 'react-bootstrap';\nimport Modal from '../../common/Modal';\nimport { CATEGORY } from  '../../../utils/constants';\n\nexport default function AddProduct(props) {\n    const { errors } = props;\n    const { categoryId,productName,description,price } = props.product;\n    return (\n        <Modal title={props.title} submitText={props.submitText} onSubmit={props.onSubmit} show={props.show} onHide={()=>props.onHide()}>\n            <Form>\n                <Form.Group controlId=\"productName\">\n                    <Form.Label>Product Name</Form.Label>\n                    <Form.Control type=\"text\" name=\"productName\" value={productName} onChange={props.handleInputChange} placeholder=\"Enter product name\" />\n                    {errors.productName && <label htmlFor=\"categoryName\" className=\"error\">{errors.productName}</label>}\n                </Form.Group>\n                <Form.Group controlId=\"Email\">\n                    <Form.Label>Category</Form.Label>\n                    <select\n                        name=\"categoryId\"\n                        value={categoryId}\n                        onChange={props.handleInputChange}\n                        className=\"form-control\"\n                    >\n                        <option value=\"\">Select Category</option>\n                        { CATEGORY && Array.isArray(CATEGORY) && CATEGORY.map(category => {\n                        return (\n                            <option key={category.categoryId} value={category.categoryId}>\n                                {category.categoryName}\n                            </option>\n                        );\n                        })}\n                    </select>\n                    {errors.categoryId && <label htmlFor=\"categoryName\" className=\"error\">{errors.categoryId}</label>}\n                </Form.Group>\n                <Form.Group controlId=\"price\">\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control type=\"number\" name=\"price\" placeholder=\"Enter price\" value={price} onChange={props.handleInputChange}/>\n                    {errors.price && <label htmlFor=\"categoryName\" className=\"error\">{errors.price}</label>}\n                </Form.Group>\n                <Form.Group controlId=\"Description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type=\"text\" as=\"textarea\" name=\"description\" placeholder=\"Enter Description\" value={description} onChange={props.handleInputChange}/>\n                    {errors.description && <label htmlFor=\"categoryName\" className=\"error\">{errors.description}</label>}\n                </Form.Group>\n            </Form>\n        </Modal>\n    )\n}\n","import React, { Component} from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faTrashAlt, faPenAlt\n} from '@fortawesome/free-solid-svg-icons'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport {isEmptyOrNull} from  '../../../utils/validation';\nimport { getAllProducts, AddProduct, updateProduct, deleteProduct, getProductById } from \"./Action\";\nimport { Table, Container, Button, Row, Col } from 'react-bootstrap';\nimport AddProductComponent from './AddProduct';\nimport { CATEGORY } from '../../../utils/constants';\n\nclass InventoryList extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      isModalShow : false,\n      product:{},\n      isShow: false,\n      productId: null,\n      errors : {}\n    };\n  }\n\n  componentDidMount(){\n    // this.props.getAllProducts();\n  }\n\n  // static getDerivedStateFromProps(newProps,prevState){\n  //   console.log(\"prevState.product\",newProps.productsData.singleProduct)\n  //   console.log(\"newProps.productsData.singleProduct\",newProps.productsData.singleProduct)\n  //   if (prevState.product !== newProps.productsData.singleProduct) {\n  //     return { ...prevState, product: newProps.productsData.singleProduct } \n  //   }else{\n  //     // alert()\n  //     return { ...prevState, product: {} }\n  //   }\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState){\n  //   if ( this.state.product !== nextProps.productsData.singleProduct) {\n  //     this.setState({product: nextProps.productsData.singleProduct}) \n  //   }\n  //   return true;\n  // }\n\n  componentWillReceiveProps(nextProps){\n    if ( this.state.product !== nextProps.productsData.singleProduct) {\n      this.setState({product: nextProps.productsData.singleProduct}) \n    }else{\n      this.setState({product: {} })\n    }\n  }\n\n  handleInputChange = (e) =>{\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({product:{ ...this.state.product,[name]:value}})\n  }\n\n  getCategoryName = (id) =>{\n    const category = CATEGORY.filter(category => category.categoryId == id);\n    return category.length > 0 ? category[0][\"categoryName\"] : \"\";\n  }\n  \n  getProductById = ({productId}) =>{\n    this.props.getProductById(productId);\n    this.openModal()\n  }\n\n  deleteProduct = ({productId}) =>{\n    this.setState({isShow:true,productId})\n  }\n\n  onConfirm = () =>{\n    this.props.deleteProduct(this.state.productId);\n    this.setState({isShow:false,productId:null})\n  }\n\n  handlesubmit = () =>{\n    const { product} = this.state;\n    if(this.validateInput()) {\n      if(product.productId){\n        this.props.updateProduct(product);\n        this.closeModal()\n      }else{\n        this.props.AddProduct(product);\n        this.closeModal()\n      }\n    }\n  }\n\n  validateInput = () =>{\n    let errors = {};\n    const { productName, price, description, categoryId} = this.state.product;\n    isEmptyOrNull(productName, errors, 'productName', 'Product name is required');\n    isEmptyOrNull(price, errors, 'price', 'Price is required');\n    isEmptyOrNull(description, errors, 'description', 'Description is required');\n    isEmptyOrNull(categoryId, errors, 'categoryId', 'Please select category');\n    this.setState({ errors })\n    return Object.keys(errors).length === 0;\n  }\n\n  openModal = () =>{\n    this.setState({ isModalShow:true })\n  }\n\n  closeModal = () =>{\n    this.setState({ isModalShow:false })\n    this.setState({ product: {} })\n    this.setState({ errors: {} })\n  }\n  render() {\n    const { productsData: { products } } = this.props;\n    const { isModalShow, product, errors} = this.state;\n\n    return (\n      <div className=\"mt-60\">\n          <Row className=\"mb-20\">\n            <Col sm={10}>\n              <h2>Products Management </h2>\n            </Col>\n            <Col sm={2}>\n              <Button variant=\"primary\" onClick={this.openModal}>\n                Add Product\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={12}>\n              {isModalShow && <AddProductComponent \n                                  title={product && product.productId ? \"Update Product\":\"Add Product\"}\n                                  show={isModalShow} \n                                  handleInputChange={this.handleInputChange} \n                                  onHide={this.closeModal} \n                                  product={product}\n                                  errors={errors}\n                                  onSubmit={this.handlesubmit}\n                                  submitText={product && product.productId ? \"Update\":\"Add\"}\n                                />}\n              <Table striped bordered hover responsive>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Category</th>\n                    <th>Description</th>\n                    <th>Price</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    products && Array.isArray(products) && products.length > 0 ?\n                      products.map((product, index) => {\n                        return (\n                          <tr key={index}>\n                            <td>{index + 1}</td>\n                            <td>{product.productName}</td>\n                            <td>{this.getCategoryName(product.categoryId)}</td>\n                            <td width=\"30%\">{product.description}</td>\n                            <td>{product.price}</td>\n                            <td>\n                            <Button variant=\"primary\"  onClick={() => this.getProductById(product)} style={{marginRight: \"20px\"}}>\n                              <FontAwesomeIcon icon={faPenAlt} />\n                            </Button>\n                            <Button variant=\"danger\" onClick={() => this.deleteProduct(product)}>\n                              <FontAwesomeIcon icon={faTrashAlt} />\n                            </Button>\n                            </td>\n                          </tr>\n                        )\n                      }) : null\n                  }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n          <SweetAlert\n            warning\n            showCancel\n            show={this.state.isShow}\n            confirmBtnText=\"YES\"\n            confirmBtnBsStyle=\"danger\"\n            title=\"Are you sure you want to delete ?\"\n            onConfirm={this.onConfirm}\n            onCancel={()=>this.setState({isShow:false})}\n            focusCancelBtn\n          >\n        </SweetAlert> \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(\"state.ProductReducer\", state)\n\n  return {\n    productsData: state.ProductReducer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  //Bind all the Actions which you want to dispatch in the container. \n  return bindActionCreators({\n    getAllProducts,\n    getProductById,\n    AddProduct,\n    updateProduct,\n    deleteProduct,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InventoryList);","import './App.css';\nimport Header from './components/common/Header';\nimport ProductList from './components/admin/Product';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"wrapper center\">\n        <ProductList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as ActionType from './ActionTypes';\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    products : [\r\n        {\r\n           \"productId\":1,\r\n           \"categoryId\":1,\r\n           \"productName\":\"Carrot(Gajar)\",\r\n           \"description\":\"Description Baby Potato is a starchy vegetable which is popularly used in many recipes.\",\r\n           \"price\":20,\r\n        },\r\n        {\r\n           \"productId\":2,\r\n           \"categoryId\":1,\r\n           \"productName\":\"Cauliflower\",\r\n           \"description\":\"Description Baby Potato is a starchy vegetable which is popularly used in many recipes.\",\r\n           \"price\":25,\r\n        },\r\n        {\r\n           \"productId\":3,\r\n           \"categoryId\":2,\r\n           \"productName\":\"Chili\",\r\n           \"description\":\"Description Baby Potato is a starchy vegetable which is popularly used in many recipes.\",\r\n           \"price\":15,\r\n        },\r\n        {\r\n           \"productId\":4,\r\n           \"categoryId\":2,\r\n           \"productName\":\"coconut\",\r\n           \"description\":\"Description Baby Potato is a starchy vegetable which is popularly used in many recipes.\",\r\n           \"price\":40,\r\n        },\r\n     ],\r\n    singleProduct : {},\r\n    error : null,\r\n}\r\n\r\nconst inventoryReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case ActionType.GET_ALL_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products : state.products\r\n            }\r\n        case ActionType.GET_PRODUCT_BY_ID:\r\n            \r\n            const singleProduct = state.products.filter(product=>action.payload == product.productId);\r\n            return {\r\n                ...state,\r\n                singleProduct: singleProduct.length > 0 ? singleProduct[0] : {}\r\n            }\r\n        case ActionType.ADD_PRODUCT:\r\n            action.payload.productId = state.products.length + 1;\r\n            const addProduct = [...state.products, action.payload]\r\n            return {\r\n                ...state,\r\n                products : addProduct\r\n            }\r\n        case ActionType.UPDATE_PRODUCT:\r\n            const updateProduct = state.products.map(product=>{\r\n                if (action.payload.productId !== product.productId) return product;\r\n                return action.payload;\r\n            });\r\n            return {\r\n                ...state,\r\n                products : updateProduct\r\n            }\r\n        case ActionType.DELETE_PRODUCT:\r\n            const updatedProduct = state.products.filter(product=>action.payload !== product.productId);\r\n            return {\r\n                ...state,\r\n                products : updatedProduct,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default inventoryReducer;\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { applyMiddleware, combineReducers, createStore, compose } from 'redux';\n\nimport * as allReducers from './Reducers';\n\nconst rootReducer = combineReducers(Object.assign({}, \n  allReducers,\n));\nconst enhancer = compose(\n  applyMiddleware(thunkMiddleware),\n);\nconst store = createStore(rootReducer, enhancer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}